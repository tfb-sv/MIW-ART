##############################################################################
##############################################################################
##############################################################################

cd C:\Users\nural\OneDrive\Masaüstü\ART-Mol

##############################################################################

import pandas as pd
import copy
from sklearn.model_selection import train_test_split

##############################################################################
##############################################################################
##############################################################################

def load_df(data_name, set_name):
    f_lock = f"data/bbbp{data_name}/bbbp{data_name}_{set_name}.csv"
    df = pd.read_csv(f_lock)
    return df

#####################################################

df2_train = load_df("2k", "train")
df2_valid = load_df("2k", "val")
df2_test = load_df("2k", "test")
df8_all = load_df("8k", "all_orj")

##############################################################################

alls = pd.concat([df2_train, df2_valid, df8_all], axis=0, ignore_index=True)
alls = alls.drop('Unnamed: 0', axis=1)
alls_c = copy.deepcopy(alls)
        
##############################################################################

duplicates = df2_test[df2_test["smiles"].isin(alls_c["smiles"])]

#####################################################

alls_c = alls_c[~alls_c["smiles"].isin(duplicates["smiles"])]

#####################################################

alls_c = alls_c.drop_duplicates(subset="smiles", keep="first")

#####################################################

df_train_new, df_valid_new = train_test_split(alls_c, test_size=0.1, random_state=42)

#####################################################

df_train_new.to_csv("bbbp8k_train_new.csv")

df_valid_new.to_csv("bbbp8k_val_new.csv")

##############################################################################
##############################################################################
##############################################################################












































